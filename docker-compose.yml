version: "3.8"

services:
  user-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: userdb
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  transaction-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transactiondb
    volumes:
      - transaction-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  user-service:
    build: ./user-service
    environment:
      - DB_HOST=user-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=userdb
      - JWT_SECRET=verysecretkey
    depends_on:
      - user-db
    networks:
      - app-network
    ports:
      - "3001:3001" # REST API
      - "50051:50051"

  transaction-service:
    build: ./transaction-service
    environment:
      - DB_HOST=transaction-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=transactiondb

    depends_on:
      - transaction-db
      - user-service
    networks:
      - app-network
    ports:
      - "3003:3003" # REST API (kalau ada)

  nginx:
    image: nginx:latest
    restart: on-failure
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - transaction-service
    networks:
      - app-network

volumes:
  user-db-data:
  transaction-db-data:

networks:
  app-network:
    driver: bridge
